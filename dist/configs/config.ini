client.command_socket = @@LEPRECHAUN_HOME@@/var/run/leprechaun/client.sock
# we want to log our errors, and specify where
error_log = @@LEPRECHAUN_HOME@@/var/log/leprechaun/error.log
# we want to log our info about app to know whats going on
info_log = @@LEPRECHAUN_HOME@@/var/log/leprechaun/info.log
# path to recipes directory
recipes_path = @@LEPRECHAUN_HOME@@/dist/recipes
# pid file holding pid of process
client.pid_file = @@LEPRECHAUN_HOME@@/var/run/leprechaun/client.pid
# lock file is only present when client is busy
client.lock_file = @@LEPRECHAUN_HOME@@var/run/leprechaun/client.lock

# Specify dir where workers will output
worker_output_dir = @@LEPRECHAUN_HOME@@/var/log/leprechaun/workers.output

# number of workers that can work in parallel
# workers are working on steps, basically on commands
# recipe steps can be do in parallel
# other that are on wait will be retryed every time after
# client.retry_recipe_after times until they are done
max_allowed_workers = 5
# when number of workers is exceeded queue will stack to pile up
# define how much workers you want to allow to be queue, all other workers will be ditched
# also attempt to notify you will be tryed
max_allowed_queue_workers = 5

server.command_socket = @@LEPRECHAUN_HOME@@/var/run/leprechaun/server.sock
# server is listening on this port
server.port = 11400
# pid file holding pid of process
server.pid_file = @@LEPRECHAUN_HOME@@/var/run/leprechaun/server.pid
# lock file is only present when client is busy
server.lock_file = @@LEPRECHAUN_HOME@@/var/run/leprechaun/server.lock

cron.command_socket = @@LEPRECHAUN_HOME@@/var/run/leprechaun/cron.sock
cron.pid_file = @@LEPRECHAUN_HOME@@/var/run/leprechaun/cron.pid
# lock file is only present when client is busy
cron.lock_file = @@LEPRECHAUN_HOME@@/var/run/leprechaun/cron.lock

#smtp_host = 
#smtp_username = 
#smtp_password = 
#notifications_email = 
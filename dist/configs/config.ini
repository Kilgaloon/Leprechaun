# Services will use config settings that match their respective names
# ex: server.port = 11400 means that just Server service will use this setting


# error reporting to our sentry
# we are using this just to fix bugs in advance
# if you don't want to share this data
# set it to false
daemon.error_reporting = true
# we want to log our errors, and specify where
error_log = var/log/leprechaun/error.log
# we want to log our info about app to know whats going on
info_log = var/log/leprechaun/info.log
# path to recipes directory
recipes_path = dist/recipes

# Specify dir where workers will output
worker_output_dir = var/log/leprechaun/workers.output

# number of workers that can work in parallel
# workers are working on steps, basically on commands
# recipe steps can be do in parallel
# other that are on wait will be retryed every time after
# client.retry_recipe_after times until they are done
max_allowed_workers = 5
# when number of workers is exceeded queue will stack to pile up
# define how much workers you want to allow to be queue, all other workers will be ditched
# also attempt to notify you will be tryed
max_allowed_queue_workers = 5

# server is listening on this port
server.port = 11400

# setting domain to https://example.com will 
# result in tls connection otherwise it will be HTTP
server.domain = ""

# settings for email notifications
#smtp_host = 
#smtp_username = 
#smtp_password = 
#notifications_email = 

# certificate and private key for using remote service 
#pem_file = privatekey.pem
#key_file = publickey.cer

# Remote service will use this to match allowed commands to run
#remote.allowed_commands = "echo"
# Remote service port on which it will run
#remote.port = 8902

# map host with port on which remote service is running
#[remote_services]
#localhost = 8902